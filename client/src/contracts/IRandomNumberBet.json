{
  "contractName": "IRandomNumberBet",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "guessValue",
          "type": "uint256"
        }
      ],
      "name": "guess",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "guessesLeft",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\r\n\r\n\r\n//Defines special features this type of bet requires for interaction with the user.\r\ninterface IRandomNumberBet {\r\n    function guess(uint guessValue) external;\r\n    function guessesLeft() external;\r\n}",
  "sourcePath": "C:\\Users\\Robin\\Documents\\GitHub\\QuintorExperiment\\contracts\\IRandomNumberBet.sol",
  "ast": {
    "absolutePath": "/C/Users/Robin/Documents/GitHub/QuintorExperiment/contracts/IRandomNumberBet.sol",
    "exportedSymbols": {
      "IRandomNumberBet": [
        414
      ]
    },
    "id": 415,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 405,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 414,
        "linearizedBaseContracts": [
          414
        ],
        "name": "IRandomNumberBet",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 410,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "guess",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "name": "guessValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "163:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "163:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "162:17:2"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "188:0:2"
            },
            "scope": 414,
            "src": "148:41:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "id": 413,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "guessesLeft",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "215:2:2"
            },
            "returnParameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "226:0:2"
            },
            "scope": 414,
            "src": "195:32:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 415,
        "src": "114:116:2"
      }
    ],
    "src": "0:230:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Robin/Documents/GitHub/QuintorExperiment/contracts/IRandomNumberBet.sol",
    "exportedSymbols": {
      "IRandomNumberBet": [
        414
      ]
    },
    "id": 415,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 405,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 414,
        "linearizedBaseContracts": [
          414
        ],
        "name": "IRandomNumberBet",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 410,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "guess",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "name": "guessValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "163:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "163:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "162:17:2"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "188:0:2"
            },
            "scope": 414,
            "src": "148:41:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "id": 413,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "guessesLeft",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "215:2:2"
            },
            "returnParameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "226:0:2"
            },
            "scope": 414,
            "src": "195:32:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 415,
        "src": "114:116:2"
      }
    ],
    "src": "0:230:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-03-16T15:49:36.955Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}